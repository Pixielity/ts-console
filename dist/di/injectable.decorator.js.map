{"version":3,"sources":["../../src/di/injectable.decorator.ts"],"names":[],"mappings":";;;;;;;;;;;;;AAKa,IAAA,uBAAA,GAA0B,OAAO,YAAY;AASnD,SAAS,UAA6B,GAAA;AAC3C,EAAA,OAAO,CAAC,MAAqB,KAAA;AAE3B,IAAA,MAAM,aAAa,OAAQ,CAAA,WAAA,CAAY,mBAAqB,EAAA,MAAM,KAAK,EAAC;AAGxE,IAAQ,OAAA,CAAA,cAAA,CAAe,uBAAyB,EAAA,UAAA,EAAY,MAAM,CAAA;AAAA,GACpE;AACF","file":"injectable.decorator.js","sourcesContent":["import \"reflect-metadata\"\n\n/**\n * Metadata key for injectable\n */\nexport const INJECTABLE_METADATA_KEY = Symbol(\"injectable\")\n\n/**\n * Injectable decorator\n *\n * Marks a class as injectable\n *\n * @returns {ClassDecorator} The class decorator\n */\nexport function Injectable(): ClassDecorator {\n  return (target: Function) => {\n    // Get the design:paramtypes metadata, which contains the types of the constructor parameters\n    const paramTypes = Reflect.getMetadata(\"design:paramtypes\", target) || []\n\n    // Store the parameter types as dependencies\n    Reflect.defineMetadata(INJECTABLE_METADATA_KEY, paramTypes, target)\n  }\n}\n"]}